import requests
from urllib.parse import urlparse, parse_qs, urlencode, urlunparse


payloads = [
  "<script>alert(1)</script>",
  '"><svg/onload=alert(1)>',
  "'\"><img src=x onerror=alert(1)>"
]


def scan_xss(url):
  parsed_url = urlparse(url)
  params = parse_qs(parsed_url.query)


  if not params:
    print("No query parameters found to test XSS.")
    return
  
  for payload in payloads:
    for param in params:
      test_params = params.copy()
      test_params[param] = payload
      encoded_params = urlencode(test_params, doseq=True)


      test_url = urlunparse((
        parsed_url.scheme,
        parsed_url.netloc,
        parsed_url.path,
        parsed_url.params,
        encoded_params,
        parsed_url.fragment
      ))


      print(f"\n[Testing] {test_url}")
      try:
        response = requests.get(test_url, timeout=10)
        if payload in response.text:
          print(f"Possible XSS vulnerability detected with payload: {payload}")
        else:
          print(f"No reflection detected for payload: {payload}")
      except requests.exceptions.RequestException as e:
        print(f"Request failed {e}")



if __name__ == "__main__":
  target_url = input("Enter the URL with parameters (example: http://example.com/page.php?param=value):\n")
  scan_xss(target_url)